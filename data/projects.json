{
  "projects": [
    {
      "slug": "kasa",
      "title": "Kasa",
      "role": "Développeur Frontend",
      "date": "2024",
      "tags": ["React", "React Router", "Sass", "SPA", "Responsive"],
      "stack": ["React", "React Router DOM", "Sass", "JavaScript ES6", "Vite"],
      "resume": "Intégration d'une maquette Figma pour Kasa, une startup fictive de location immobilière. Projet pédagogique OpenClassrooms axé sur l'apprentissage de React, du routing SPA et de la création de composants réutilisables.",
      "problems": [
        "Compréhension initiale de la circulation des props entre composants React",
        "Structuration propre de l'architecture des composants (Header, Layout, Footer)",
        "Bug du composant Collapse qui coupait le texte lors de l'animation",
        "Création d'un carrousel tactile personnalisé avec navigation par flèches",
        "Gestion des erreurs 404 et création d'une page dédiée"
      ],
      "solutions": [
        "Apprentissage progressif du flux de données React et maîtrise des props",
        "Refactorisation de l'architecture en regroupant Header, Layout et Footer dans un dossier dédié",
        "Manipulation du scrollHeight dynamiquement avec useRef pour corriger l'animation du Collapse",
        "Développement d'un carrousel custom avec useState et gestion des onClick sur les flèches",
        "Implémentation de React Router pour gérer les routes 404 avec une page d'erreur personnalisée"
      ],
      "results": [
        "Maîtrise des concepts fondamentaux de React (props, useState, useRef)",
        "Architecture de composants claire et réutilisable (Collapse.jsx, Slideshow.jsx, Tag.jsx, Layout.jsx)",
        "Application SPA fonctionnelle avec navigation fluide",
        "Composants interactifs robustes (carrousel tactile, système de collapse)",
        "Gestion complète des erreurs et des cas limites"
      ],
      "links": {
        "demo": "https://kasa-demo.vercel.app",
        "repo": "https://github.com/helianthe24/kasa-vite-react"
      },
      "images": ["/images/projects/kasa/cover.jpg"],
      "featured": true
    },
    {
      "slug": "mon-vieux-grimoire",
      "title": "Mon Vieux Grimoire",
      "role": "Développeur Backend",
      "date": "2024",
      "tags": ["Node.js", "Express", "MongoDB", "JWT", "API REST"],
      "stack": [
        "Node.js",
        "Express",
        "MongoDB",
        "Mongoose",
        "Multer",
        "Sharp",
        "JWT"
      ],
      "resume": "API REST complète pour une plateforme de notation de livres. Développement backend avec authentification JWT, gestion d'images automatisée et système de notation intégré. Projet axé sur la sécurité et les bonnes pratiques backend.",
      "problems": [
        "Mise en place d'une authentification sécurisée avec JWT sans faille",
        "Structuration propre des modèles MongoDB avec Mongoose",
        "Gestion de l'upload d'images avec compression automatique",
        "Implémentation d'un système de notation (une seule note par utilisateur)",
        "Calcul automatique et mise à jour des moyennes de notation",
        "Organisation des routes CRUD pour livres et utilisateurs"
      ],
      "solutions": [
        "Implémentation JWT avec middleware de vérification sur les routes protégées",
        "Création de schémas Mongoose structurés avec validation des données",
        "Configuration Multer + Sharp pour upload et compression automatique des images",
        "Développement d'un système de notation avec vérification d'unicité par utilisateur",
        "Mise en place de hooks Mongoose pour recalculer automatiquement les moyennes",
        "Structuration claire des routes avec séparation controllers/routes/models"
      ],
      "results": [
        "API REST fonctionnelle avec toutes les routes CRUD opérationnelles",
        "Authentification sécurisée testée et validée",
        "Gestion d'images optimisée (compression, redimensionnement automatique)",
        "Système de notation robuste avec calcul automatique des moyennes",
        "Code organisé et versionné sur GitHub avec commits structurés",
        "Tous les endpoints testés et validés avec Postman"
      ],
      "links": {
        "demo": "https://mon-vieux-grimoire-api.herokuapp.com",
        "repo": "https://github.com/helianthe24/mon-vieux-grimoire-backend"
      },
      "images": ["/images/projects/mon-vieux-grimoire/cover.jpg"],
      "featured": true
    }
  ]
}
